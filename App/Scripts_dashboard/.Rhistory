shiny::runApp('C:/Users/Oscar Centeno/Desktop/Oscar/Github/MuestreoUnidadesMonetarias/App/Scripts_dashboard')
shiny::runApp('C:/Users/Oscar Centeno/Desktop/Oscar/CGR/2024/MUM/App/Scripts_dashboard')
shiny::runApp('C:/Users/Oscar Centeno/Desktop/Oscar/CGR/2024/MUM/App/Scripts_dashboard')
runApp('C:/Users/Oscar Centeno/Desktop/Oscar/CGR/2024/MUM/App/Scripts_dashboard')
# Verificar la biblioteca de usuario
print(.libPaths())
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
library(dplyr)
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
library(dplyr)
# Configurar el archivo de log
log_file <- file("C:/Users/Oscar Centeno/Desktop/RTest/logfiles/log_test.txt", open = "wt")
sink(log_file, type = "output")
sink(log_file, type = "message")
# Configurar la biblioteca del sistema
.libPaths("C:/Program Files/R/R-4.3.1/library")
# Verificar la biblioteca del sistema
print(.libPaths())
# Asegurarse de que los paquetes necesarios están instalados
required_packages <- c("dplyr")
new_packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) {
install.packages(new_packages, lib='C:/Program Files/R/R-4.3.1/library', repos='http://cran.rstudio.com/')
}
install.packages(new_packages, lib = "C:/Program Files/R/R-4.3.1/library", repos = "http://cran.rstudio.com/")
# Cargar las bibliotecas
lapply(required_packages, require, character.only = TRUE)
# Simular datos y utilizar dplyr
library(dplyr)
data <- data.frame(
id = 1:10,
value = sample(1:100, 10)
)
result <- data %>%
filter(value > 50) %>%
mutate(value = value * 2)
print(result)
# Exportar los datos a un archivo CSV
write.csv(result, "C:/Users/Oscar Centeno/Desktop/RTest/Exporttest1.csv", row.names = FALSE)
# Cerrar el archivo de log al final del script
sink()
close(log_file)
#  Librerías
##############
library(dplyr)
# Configurar el archivo de log
log_file <- file("C:/Users/Oscar Centeno/Desktop/RTest/logfiles/log_test.txt", open = "wt")
sink(log_file, type = "output")
sink(log_file, type = "message")
# Configurar la biblioteca del sistema
.libPaths("C:/Program Files/R/R-4.3.1/library")
# Verificar la biblioteca del sistema
print(.libPaths())
# Asegurarse de que los paquetes necesarios están instalados
required_packages <- c("dplyr")
new_packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) {
install.packages(new_packages, lib='C:/Program Files/R/R-4.3.1/library', repos='http://cran.rstudio.com/')
}
# Cargar las bibliotecas
lapply(required_packages, require, character.only = TRUE)
# Simular datos y utilizar dplyr
library(dplyr)
data <- data.frame(
id = 1:10,
value = sample(1:100, 10)
)
result <- data %>%
filter(value > 50) %>%
mutate(value = value * 2)
print(result)
# Exportar los datos a un archivo CSV
write.csv(result, "C:/Users/Oscar Centeno/Desktop/RTest/Exporttest1.csv", row.names = FALSE)
# Cerrar el archivo de log al final del script
sink()
close(log_file)
install.packages(new_packages, lib = "C:/Program Files/R/R-4.3.1/library", repos = "http://cran.rstudio.com/")
library(dplyr)
# Configurar el archivo de log
log_file <- file("C:/Users/Oscar Centeno/Desktop/RTest/logfiles/log_test.txt", open = "wt")
sink(log_file, type = "output")
sink(log_file, type = "message")
# Configurar la biblioteca del sistema
.libPaths("C:/Program Files/R/R-4.3.1/library")
# Verificar la biblioteca del sistema
print(.libPaths())
# Cargar las bibliotecas
lapply(required_packages, require, character.only = TRUE)
# Simular datos y utilizar dplyr
library(dplyr)
data <- data.frame(
id = 1:10,
value = sample(1:100, 10)
)
result <- data %>%
filter(value > 50) %>%
mutate(value = value * 2)
print(result)
# Exportar los datos a un archivo CSV
write.csv(result, "C:/Users/Oscar Centeno/Desktop/RTest/Exporttest1.csv", row.names = FALSE)
# Cerrar el archivo de log al final del script
sink()
close(log_file)
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
# Cerrar el archivo de log al final del script
sink()
close(log_file)
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
install.packages("dplyr", dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
install.packages("dplyr", lib="C:/Program Files/R/R-4.3.1/library", dependencies = TRUE, repos='http://cran.rstudio.com/')
.libPaths("C:/Program Files/R/R-4.3.1/library")
library(dplyr)
install.packages("dplyr", lib="C:/Program Files/R/R-4.3.1/library", dependencies = TRUE, repos='http://cran.rstudio.com/')
install.packages("dplyr", lib = "C:/Program Files/R/R-4.3.1/library", dependencies = TRUE, repos = "http://cran.rstudio.com/")
##############
#  Librerías
##############
# Cargar las bibliotecas sin mostrar mensajes
suppressMessages({
library(dplyr)
})
##############
# Configurar el archivo de log
log_file <- file("C:/Users/Oscar Centeno/Desktop/RTest/logfiles/log_test.txt", open = "wt")
sink(log_file, type = "output")
sink(log_file, type = "message")
# Configurar la biblioteca del sistema
.libPaths("C:/Program Files/R/R-4.3.1/library")
# Verificar la biblioteca del sistema
print(.libPaths())
# Simular datos y utilizar dplyr
data <- data.frame(
id = 1:10,
value = sample(1:100, 10)
)
result <- data %>%
filter(value > 50) %>%
mutate(value = value * 2)
print(result)
# Exportar los datos a un archivo CSV
write.csv(result, "C:/Users/Oscar Centeno/Desktop/RTest/Exporttest1.csv", row.names = FALSE)
# Cerrar los archivos de log al final del script
sink(type = "message")
sink()
close(log_file)
install.packages("dplyr", dependencies = TRUE)
install.packages("dplyr", lib="C:/Program Files/R/R-4.3.1/library", dependencies = TRUE, repos='http://cran.rstudio.com/')
.libPaths("C:/Program Files/R/R-4.3.1/library")
install.packages("dplyr", dependencies = TRUE)
# Cargar las bibliotecas sin mostrar mensajes
suppressMessages({
library(dplyr)
})
# Configurar el archivo de log
log_file <- file("C:/Users/Oscar Centeno/Desktop/RTest/logfiles/log_test.txt", open = "wt")
sink(log_file, type = "output")
sink(log_file, type = "message")
# Configurar la biblioteca del sistema
.libPaths("C:/Program Files/R/R-4.3.1/library")
# Verificar la biblioteca del sistema
print(.libPaths())
print(.libPaths())
# Simular datos y utilizar dplyr
data <- data.frame(
id = 1:10,
value = sample(1:100, 10)
)
result <- data %>%
filter(value > 50) %>%
mutate(value = value * 2)
print(result)
# Exportar los datos a un archivo CSV
write.csv(result, "C:/Users/Oscar Centeno/Desktop/RTest/Exporttest1.csv", row.names = FALSE)
# Simular datos y utilizar dplyr
data <- data.frame(
id = 1:10,
value = sample(1:100, 10)
)
result <- data %>%
filter(value > 50) %>%
mutate(value = value * 2)
print(result)
# Exportar los datos a un archivo CSV
write.csv(result, "C:/Users/Oscar Centeno/Desktop/RTest/Exporttest1.csv", row.names = FALSE)
data <- data.frame(
id = 1:10,
value = sample(1:100, 10)
)
result <- data %>%
filter(value > 50) %>%
mutate(value = value * 2)
print(result)
# Exportar los datos a un archivo CSV
write.csv(result, "C:/Users/Oscar Centeno/Desktop/RTest/Exporttest1.csv", row.names = FALSE)
# Cerrar los archivos de log al final del script
sink(type = "message")
sink()
close(log_file)
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
########################
#         Test 1
########################
##############
#  Librerías
##############
# Cargar las bibliotecas sin mostrar mensajes
suppressMessages({
library(dplyr)
})
##############
# Configurar el archivo de log
log_file <- file("C:/Users/Oscar Centeno/Desktop/RTest/logfiles/log_test.txt", open = "wt")
sink(log_file, type = "output")
sink(log_file, type = "message")
# Configurar la biblioteca del sistema
.libPaths("C:/Program Files/R/R-4.3.1/library")
# Verificar la biblioteca del sistema
print(.libPaths())
# Simular datos y utilizar dplyr
data <- data.frame(
id = 1:10,
value = sample(1:100, 10)
)
result <- data %>%
filter(value > 50) %>%
mutate(value = value * 2)
print(result)
# Exportar los datos a un archivo CSV
write.csv(result, "C:/Users/Oscar Centeno/Desktop/RTest/Exporttest1.csv", row.names = FALSE)
# Cerrar los archivos de log al final del script
sink(type = "message")
sink()
close(log_file)
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
R.version.string
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
source("C:/Users/Oscar Centeno/Desktop/RTest/RTest1.R")
#######################
library(taskscheduleR)
taskscheduler_stop("TestgenData")
library(shiny); source('C:/Users/Oscar Centeno/Desktop/Oscar/CGR/2024/MUM/App/AppAuditSample.R')
